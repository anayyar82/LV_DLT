-- -- ====================================================
-- -- 1️⃣ Create Silver table
-- -- ====================================================
-- CREATE OR REFRESH STREAMING TABLE silver_events_patient_data_scd2
-- (
--   ID STRING,
--   Shard STRING,
--   Private STRING,
--   Name STRING,
--   Address1 STRING,
--   Address2 STRING,
--   City STRING,
--   State STRING,
--   ZipCode STRING,
--   Country STRING,
--   PhoneNumber STRING,
--   BusinessID STRING,
--   Created STRING,
--   CreatedBy STRING,
--   Updated STRING,
--   UpdatedBy STRING,

--   -- Flattened fields from D
--   D_id STRING,
--   D_name STRING,
--   D_address1 STRING,
--   D_address2 STRING,
--   D_city STRING,
--   D_state STRING,
--   D_zipCode STRING,
--   D_country STRING,
--   D_phoneNumber STRING,
--   D_businessId STRING,
--   D_private BOOLEAN,
--   D_created TIMESTAMP,
--   D_createdBy STRING,
--   D_updated TIMESTAMP,
--   D_updatedBy STRING,
--   D_programs STRING,
--   D_records STRING,
--   D_shard STRING,

--   V STRING,
--   P STRING,
--   processedTime TIMESTAMP
-- )
-- TBLPROPERTIES (
--   'delta.enableChangeDataFeed' = 'true',
--   'delta.enableDeletionVectors' = 'true',
--   'delta.enableRowTracking' = 'true',
--   'delta.feature.variantType-preview' = 'supported',
--   'quality' = 'silver'
-- );

-- -- ====================================================
-- -- 2️⃣ Create Flow with CDC / SCD2
-- -- ====================================================
-- CREATE FLOW silver_events_patient_data_cdc_scd2 AS AUTO CDC INTO
--   silver_events_patient_data_scd2
-- FROM (
--   WITH parsed AS (
--     SELECT
--       *,
--       parse_json(
--         regexp_replace(
--           regexp_replace(
--             substring(D, 2, length(D)-2),
--             '""', '"'
--           ),
--           '\\\\"', '"'
--         )
--       ) AS D_struct
--     FROM STREAM(patient_cdf)
--   )
--   SELECT
--     ID,
--     Shard,
--     Private,
--     Name,
--     Address1,
--     Address2,
--     City,
--     State,
--     ZipCode,
--     Country,
--     PhoneNumber,
--     BusinessID,
--     Created,
--     CreatedBy,
--     Updated,
--     UpdatedBy,

--     -- Flatten top-level fields from D_struct
--     D_struct:id::STRING           AS D_id,
--     D_struct:name::STRING         AS D_name,
--     D_struct:address1::STRING     AS D_address1,
--     D_struct:address2::STRING     AS D_address2,
--     D_struct:city::STRING         AS D_city,
--     D_struct:state::STRING        AS D_state,
--     D_struct:zipCode::STRING      AS D_zipCode,
--     D_struct:country::STRING      AS D_country,
--     D_struct:phoneNumber::STRING  AS D_phoneNumber,
--     D_struct:businessId::STRING   AS D_businessId,
--     D_struct:private::BOOLEAN     AS D_private,
--     to_timestamp(D_struct:created::BIGINT) AS D_created,
--     D_struct:createdBy::STRING    AS D_createdBy,
--     to_timestamp(D_struct:updated::BIGINT) AS D_updated,
--     D_struct:updatedBy::STRING    AS D_updatedBy,
--     D_struct:programs::STRING     AS D_programs,
--     D_struct:records::STRING      AS D_records,
--     D_struct:shard::STRING        AS D_shard,

--     V,
--     P,
--     current_timestamp() AS processedTime,
--     _change_type,
--     _commit_version,
--     _commit_timestamp
--   FROM parsed
-- )
-- KEYS (ID, BusinessID)
-- APPLY AS DELETE WHEN
--   _change_type = "delete"
-- SEQUENCE BY
--   (_commit_version, _commit_timestamp)
-- COLUMNS * EXCEPT
--   (_change_type, _commit_version, _commit_timestamp)
-- STORED AS
--   SCD TYPE 1;


